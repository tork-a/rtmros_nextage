<launch>
  <arg name="USE_IMPEDANCE" default="false" doc="true to enable Impedance Controller." />  <!-- Need to defined early to be used by another ags. -->
  <arg name="COLLADA_FILE" default="$(find nextage_description)/models/main.dae" />
  <arg name="CONF_FILE_COLLISIONDETECT" default="$(find nextage_ros_bridge)/conf/nextage.conf" />
  <arg name="CORBAPORT" default="15005" />
  <arg name="GUI" default="true" />
  <arg name="MODEL_FILE" default="$(find nextage_description)/models/main.wrl"
       unless="$(arg USE_IMPEDANCE)" />
  <arg name="MODEL_FILE" default="$(arg COLLADA_FILE)" if="$(arg USE_IMPEDANCE)" />
  <arg name="NAMESERVER" default="localhost" />
  <arg name="LAUNCH_HRPSYSPY" default='true' />

  <include file="$(find nextage_ros_bridge)/launch/nextage_startup.launch" >
    <arg name="corbaport" value="$(arg CORBAPORT)" />
    <arg name="GUI" value="$(arg GUI)" />
    <arg name="LAUNCH_HRPSYSPY" value='$(arg LAUNCH_HRPSYSPY)' />
    <arg name="MODEL_FILE" value="$(arg COLLADA_FILE)" />
  </include>

  <include file="$(find hironx_ros_bridge)/launch/hironx_ros_bridge.launch" >
    <arg name="COLLADA_FILE" value="$(arg COLLADA_FILE)" />
    <arg name="corbaport" value="$(arg CORBAPORT)" />
    <arg name="nameserver" value="$(arg NAMESERVER)" />
    <arg name="MODEL_FILE" value="$(arg COLLADA_FILE)" />
    <arg name="SIMULATOR_NAME" value="HiroNX(Robot)0" />
    <arg name="CONF_FILE_COLLISIONDETECT" value="$(arg CONF_FILE_COLLISIONDETECT)" />
  </include>

  <!-- camera image -->
  <node name="rtmlaunch_nextage_ros_bridge_simulation" pkg="openrtm_tools" type="rtmlaunch.py" args="$(find nextage_ros_bridge)/launch/nextage_ros_bridge_simulation.launch" output="screen" />
  <arg name="openrtm_args" default='-o "corba.nameservers:$(arg NAMESERVER):$(arg CORBAPORT)" -o "naming.formats:%n.rtc" -o "exec_cxt.periodic.type:PeriodicExecutionContext" -o "exec_cxt.periodic.rate:100" -o "logger.file_name:/tmp/rtc%p.log"' />
  <node pkg="hrpsys_ros_bridge" name="ImageSensorROSBridge_HeadRight" type="ImageSensorROSBridge"
        args="$(arg openrtm_args)" ns="right" >
    <param name="frame_id" value="/CAMERA_HEAD_R" />
  </node>
  <node pkg="hrpsys_ros_bridge" name="ImageSensorROSBridge_HeadLeft" type="ImageSensorROSBridge"
        args="$(arg openrtm_args)" ns="left" >
    <param name="frame_id" value="/CAMERA_HEAD_L" />
  </node>
  <node pkg="hrpsys_ros_bridge" name="ImageSensorROSBridge_HandRight" type="ImageSensorROSBridge"
        args="$(arg openrtm_args)" ns="hand_right" >
    <param name="frame_id" value="/CAMERA_HAND_R" />
  </node>
  <node pkg="hrpsys_ros_bridge" name="ImageSensorROSBridge_HandLeft" type="ImageSensorROSBridge"
        args="$(arg openrtm_args)" ns="hand_left" >
    <param name="frame_id" value="/CAMERA_HAND_L" />
  </node>
  <rtconnect from="HiroNX(Robot)0.rtc:CAMERA_HEAD_R" to="ImageSensorROSBridge_HeadRight.rtc:timedImage" />
  <rtconnect from="HiroNX(Robot)0.rtc:CAMERA_HEAD_L" to="ImageSensorROSBridge_HeadLeft.rtc:timedImage" />
  <rtconnect from="HiroNX(Robot)0.rtc:CAMERA_HAND_R" to="ImageSensorROSBridge_HandRight.rtc:timedImage" />
  <rtconnect from="HiroNX(Robot)0.rtc:CAMERA_HAND_L" to="ImageSensorROSBridge_HandLeft.rtc:timedImage" />
  <rtactivate component="ImageSensorROSBridge_HeadRight.rtc" />
  <rtactivate component="ImageSensorROSBridge_HeadLeft.rtc" />
  <rtactivate component="ImageSensorROSBridge_HandRight.rtc" />
  <rtactivate component="ImageSensorROSBridge_HandLeft.rtc" />
</launch>
